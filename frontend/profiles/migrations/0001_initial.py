# Generated by Django 5.1.7 on 2025-06-29 18:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=100)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='student_profiles/')),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('guardian_name', models.CharField(blank=True, max_length=100)),
                ('subjects_interest', models.JSONField(blank=True, default=list)),
                ('grade_level', models.CharField(blank=True, max_length=50)),
                ('goals', models.TextField(blank=True)),
                ('preferred_languages', models.JSONField(blank=True, default=list)),
                ('time_slots', models.JSONField(blank=True, default=list)),
                ('learning_mode', models.CharField(blank=True, choices=[('online', 'Online'), ('offline', 'In-person'), ('hybrid', 'Hybrid')], max_length=20)),
                ('learning_history', models.JSONField(blank=True, default=list)),
                ('bookmarks', models.JSONField(blank=True, default=list)),
                ('payment_methods', models.JSONField(blank=True, default=list)),
                ('reviews_given', models.JSONField(blank=True, default=list)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='teacher_profiles/')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non-binary', 'Non-binary'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20)),
                ('dob', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('subjects', models.TextField(blank=True, help_text='Comma-separated subjects')),
                ('grade_levels', models.TextField(blank=True)),
                ('languages', models.TextField(blank=True)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('teaching_mode', models.CharField(blank=True, choices=[('online', 'Online'), ('offline', 'Offline'), ('hybrid', 'Hybrid')], max_length=10)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('availability_schedule', models.JSONField(blank=True, null=True)),
                ('instant_booking', models.BooleanField(default=False)),
                ('max_students', models.PositiveIntegerField(default=1)),
                ('platform', models.CharField(blank=True, max_length=100)),
                ('materials_provided', models.BooleanField(default=False)),
                ('tags', models.TextField(blank=True)),
                ('cancellation_policy', models.CharField(blank=True, choices=[('12hr', 'Up to 12 hrs before'), ('24hr', 'Up to 24 hrs before'), ('non-refundable', 'Non-refundable')], max_length=30)),
                ('booking_deadline', models.PositiveIntegerField(blank=True, help_text='Minimum minutes before session start to book.', null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=15)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
